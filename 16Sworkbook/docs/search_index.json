[["visualization.html", "8 Visualization 8.1 Taxonomic Composition 8.2 Alpha Diversity 8.3 Beta Diversity", " 8 Visualization Phyloseq has several functions built in for the analysis of microbiome data (complete with well-documented tutorials). We’ll go through a few of them here. 8.1 Taxonomic Composition First, we make some composition plots of the samples to get a good idea of what’s in them. Start by agglomerating the AVSs to whatever taxonomic level you’re interested in. You can do this with the tax_glom() function. ## Aggolomerate to Phylum level phy &lt;- tax_glom(psf, &quot;Phylum&quot;) 8.1.1 Exercise A - What other data transformations do you think are necessary? Have a closer look at otu_table(phy) to give you an idea. B - Use the plot_bar() function to generate a bar plot for the phylum level composition. C - Use the psmelt() and ggplot() functions to generate the same bar plot. When we look at lower levels of taxonomy (like genus), it is impractical to plot all genera found. It would look like this: 8.1.2 Exercise A - Create a new phyloseq object that contains only the top 10 most abundant genera. Strong hints: use the function sort() to order the genera, then subset the top 10. Following that, use the function prune_taxa() to create the new phyloseq object. B - Change the color of the bars! See this page for inspiration: https://www.nceas.ucsb.edu/sites/default/files/2020-04/colorPaletteCheatsheet.pdf Lastly, we sometimes want to look at differences between groups, based on the metadata. 8.1.3 Exercise Use the function facet_wrap() to group the samples by: A - Treatment B - Timepoint C - Treatment and SubjectID With the goal or producing a summary like this: 8.2 Alpha Diversity Diversity estimates are a central topic in microbimoe data analysis. Many different ways for estimating such diversity measurements have been described in the literature, mostly from community ecology. Here we look at a few of these measurements. Which measurement is best or most applicable to your study is not the aim of this section. Alpha diversity summarizes the distribution of species abundance in a given sample into a single number that depends on species richness and evenness. Richness refers to the total number of species in a community (sample). The simplest richness index is the number of observed species (observed richness). Assuming limited sampling from the community, however, this may underestimate the true species richness. Several estimators are available, including for instance ACE and Chao1. Richness estimates are unaffected by species abundances. Evenness focuses on species abundances, and can thus complement the number of species. A typical evenness index is the Pielou’s evenness, which is Shannon diversity normalized by the observed richness. A number of ecological diversity measures combine richness and evenness into a single number, including inverse Simpson and Shannon. In phyloseq, the function estimate_richness() applies a variety of these measurements to your phyloseq object. 8.2.1 Exercise A - Read the R documentation for the phyloseq function estimate_richness(). B - Create a data frame containing the results of the estimate_richness() function and the measures of alpha diveristy you are interested in. C - Create a data frame containing the sample metadata and the measures of alpha diversity you are interested in. D - Plot your results. Functions that may help include: geom_jitter() and stat_summary(). E - Does treatment seem to have an effect on alpha diversity? 8.3 Beta Diversity Where alpha diveristy focuses on diversity variation within a community (sample), beta diversity quantifies diversity between communities (samples. Some of the most popular beta diversity measures in microbiome research include Bray-Curtis index (for compositional data), Jaccard index (for presence/absence data, ignoring abundance information). Beta diversities are usually represented as dist objects, which contain triangular data describing the distance between each pair of samples. These distances can be further subjected to ordination. Ordination is a common concept in ecology that aims to reduce the dimensionsionality of the data for further evaluation or visualization. Ordination techniques aim to capture as much of essential information in the data as possible in a lower dimensional representation. Dimension reduction is bound to lose information but the common ordination techniques aim to preserve relevant information of sample similarities in an optimal way. Some of the most common ordination methods in microbiome research include Principal Component Analysis (PCA), metric and non-metric multi-dimensional scaling (MDS, NMDS). The MDS methods is also known as Principal Coordinates Analysis (PCoA). Let’s start with a basic ordination plot (as before): pslog &lt;- transform_sample_counts(psf, function(x) log(1 + x)) ord &lt;- ordinate(pslog, method = &quot;PCoA&quot;, distance = &quot;bray&quot;) bb &lt;- plot_ordination(pslog, ord, color = &quot;SampleID&quot;) + theme_bw() + geom_point(size = 3) bb The percentage of explained variance is typically shown for PCoA plots. This quantifies the proportion of overall variance in the data that is captured by the axes, or how well the ordination axes reflect the original distances. For this reason, it is essential that the dimensions of our ordination plot represent the relative contributions of our axes. We can accomplish this by extracting the eigenvalues and using the function coord_fixed(). evals &lt;- ord$values$Eigenvalues bb &lt;- plot_ordination(pslog, ord, color = &quot;SampleID&quot;) + theme_bw() + geom_point(size = 3) + coord_fixed(sqrt(evals[2]/evals[1])) bb 8.3.1 Exercise A - Create an ordination plot using relative abundance instead of a log transformation. B - Create an ordination plot using count data. C - Change the color aesthetic and/or facet_wrap() to investigate the effect of Treatment and Timepoint on composition. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
