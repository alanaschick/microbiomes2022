## Alana Schick
## This is a script to check for the presence of primers in V4 16S microbiome data
## Last updates: 2021_10_12

library(dada2)
packageVersion("dada2")
library(ShortRead)
library(Biostrings)

## Set path to directory containing raw data
path <- "/Users/alana.schick/Desktop/dropbox_temp/bcch/sequence_data/20210913"
## Set path to directory containing trimmed data
#pathcut <- "/Users/alana.schick/Desktop/dropbox_temp/bcch/projects/ffpe/run17/dada2/data/filtered"

## Read in names of files
fnFs <- sort(list.files(path, pattern = "_R1_001.fastq.gz", full.names = TRUE))
fnRs <- sort(list.files(path, pattern = "_R2_001.fastq.gz", full.names = TRUE))

fnFscut <- sort(list.files(pathcut, pattern = "_r1_filtered.fastq", full.names = TRUE))
fnRscut <- sort(list.files(pathcut, pattern = "_r2_filtered.fastq", full.names = TRUE))

## Set primer/adapter sequences
FWD <- "GCATCGATGAAGAACGCAGC"
REV <- "TCCTCCGCTTATTGATATGC"



allOrients <- function(primer) {
  # Create all orientations of the input sequence
  require(Biostrings)
  dna <- DNAString(primer)  # The Biostrings works w/ DNAString objects rather than character vectors
  orients <- c(Forward = dna, Complement = complement(dna), Reverse = reverse(dna),
               RevComp = reverseComplement(dna))
  return(sapply(orients, toString))  # Convert back to character vector
}

FWD.orients <- allOrients(FWD)
REV.orients <- allOrients(REV)
FWD.orients



## Count primer hits
primerHits <- function(primer, fn) {
  # Counts number of reads in which the primer is found
  nhits <- vcountPattern(primer, sread(readFastq(fn)), fixed = FALSE)
  return(sum(nhits > 0))
}


## Generate table of primers found in a sample
sample_to_check <- 2

f_reads <- fnFs[[sample_to_check]]
r_reads <- fnRs[[sample_to_check]]

#f_reads <- fnFscut[[sample_to_check]]
#r_reads <- fnRscut[[sample_to_check]]

rbind(FWD.ForwardReads = sapply(FWD.orients, primerHits, fn = f_reads),
      FWD.ReverseReads = sapply(FWD.orients, primerHits, fn = r_reads),
      REV.ForwardReads = sapply(REV.orients, primerHits, fn = f_reads),
      REV.ReverseReads = sapply(REV.orients, primerHits, fn = r_reads))


